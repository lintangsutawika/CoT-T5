from __gin__ import dynamic_registration

import __main__ as train_script

from t5x import models
from t5x import partitioning
from t5x import utils

import cot_t5.mixtures

include "t5x/examples/t5/t5_1_1/xxl.gin"
include "t5x/configs/runs/finetune.gin"

MIXTURE_OR_TASK_NAME = "esnli_cot"

TASK_FEATURE_LENGTHS = {"inputs": 1024, "targets": 256}
TRAIN_STEPS = 1_125_000  # 1000000 pre-trained steps + 25000 fine-tuning steps.

# `LOSS_NORMALIZING_FACTOR`: When fine-tuning a model that was pre-trained
# using Mesh Tensorflow (e.g. the public T5 / mT5 / ByT5 models), this should be
# set to `pretraining batch_size` * `target_token_length`. For T5 and T5.1.1:
# `2048 * 114`. For mT5: `1024 * 229`. For ByT5: `1024 * 189`.
LOSS_NORMALIZING_FACTOR = 233472
INITIAL_CHECKPOINT_PATH = "gs://t5-data/pretrained_models/t5x/t5_1_1_lm100k_xxl/checkpoint_1100000"

BATCH_SIZE = 1024
DROPOUT_RATE = 0.1